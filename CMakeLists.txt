cmake_minimum_required(VERSION 3.5)

project(UmutTarlalariKeyGenerator VERSION 0.1 LANGUAGES CXX)

set(CMAKE_AUTOUIC ON)
set(CMAKE_AUTOMOC ON)
set(CMAKE_AUTORCC ON)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

if(APPLE)
    set(CMAKE_MACOSX_BUNDLE ON)
endif(APPLE)

find_package(QT NAMES Qt6 Qt5 REQUIRED COMPONENTS Widgets)
find_package(Qt${QT_VERSION_MAJOR} REQUIRED COMPONENTS Widgets)

set(PROJECT_SOURCES
        main.cpp
        kodlar.hpp
        MainWindow.cpp
        MainWindow.hpp
        MainWindow.ui
        AboutWindow.hpp
        AboutWindow.cpp
        AboutWindow.ui
        Resources.qrc
)

#App Icon Definitions
if(WIN32)
    set(AppIconResourceForWindows "${CMAKE_CURRENT_SOURCE_DIR}/UmutTarlalari.rc")
elseif(APPLE)
    # The MACOSX_BUNDLE_ICON_FILE variable is added to the Info.plist
    # generated by CMake. This variable contains the .icns file name,
    # without the path.
    set(MACOSX_BUNDLE_ICON_FILE UmutTarlalari.icns)

    # And the following tells CMake where to find and install the file itself.
    set(AppIconForMacos ${CMAKE_CURRENT_SOURCE_DIR}/UmutTarlalari.icns)
    set_source_files_properties(${AppIconForMacos} PROPERTIES MACOSX_PACKAGE_LOCATION "Resources")
endif()

#if(${QT_VERSION_MAJOR} GREATER_EQUAL 6)



# Define target properties for Android with Qt 6 as:
#    set_property(TARGET UmutTarlalariKeyGenerator APPEND PROPERTY QT_ANDROID_PACKAGE_SOURCE_DIR
#                 ${CMAKE_CURRENT_SOURCE_DIR}/android)
# For more information, see https://doc.qt.io/qt-6/qt-add-executable.html#target-creation

# Define properties for Android with Qt 5 after find_package() calls as:
#    set(ANDROID_PACKAGE_SOURCE_DIR "${CMAKE_CURRENT_SOURCE_DIR}/android")
if(APPLE)
    qt_add_executable(UmutTarlalariKeyGenerator
        MANUAL_FINALIZATION
        MACOSX_BUNDLE
        ${PROJECT_SOURCES}
        ${AppIconForMacos}
    )
elseif(WIN32)
    qt_add_executable(UmutTarlalariKeyGenerator
        MANUAL_FINALIZATION
        WIN32
        ${PROJECT_SOURCES}
        ${AppIconResourceForWindows}
    )
endif()

target_link_libraries(UmutTarlalariKeyGenerator PRIVATE Qt${QT_VERSION_MAJOR}::Widgets)

# Qt for iOS sets MACOSX_BUNDLE_GUI_IDENTIFIER automatically since Qt 6.1.
# If you are developing for iOS or macOS you should consider setting an
# explicit, fixed bundle identifier manually though.
if(${QT_VERSION} VERSION_LESS 6.1.0)
  set(BUNDLE_ID_OPTION MACOSX_BUNDLE_GUI_IDENTIFIER org.volkanorhan.UmutTarlalariKeyGenerator)
endif()
set_target_properties(UmutTarlalariKeyGenerator PROPERTIES
    ${BUNDLE_ID_OPTION}
    MACOSX_BUNDLE_BUNDLE_VERSION ${PROJECT_VERSION}
    MACOSX_BUNDLE_SHORT_VERSION_STRING ${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR}
    MACOSX_BUNDLE TRUE
    WIN32_EXECUTABLE TRUE
)

include(GNUInstallDirs)
install(TARGETS UmutTarlalariKeyGenerator
    BUNDLE DESTINATION .
    LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
    RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
)


qt_finalize_executable(UmutTarlalariKeyGenerator)

